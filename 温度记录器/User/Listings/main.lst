C51 COMPILER V9.60.0.0   MAIN                                                              05/05/2022 14:22:22 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\keil\C51\BIN\C51.EXE main.c COMPACT OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Driver;..\Include;..\User
                    -) DEBUG OBJECTEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "main.h"
   2          
   3          bit flag200ms = 1;
   4          bit flag500ms = 0;
   5          bit flag1s = 0;
   6          bit flag18b20 = 0;
   7          unsigned char T0RH = 0;
   8          unsigned char T0RL = 0;
   9          extern unsigned char setIndex;
  10          unsigned char mode = 0;
  11          unsigned char Temp_index = 0;
  12          unsigned char flagtemp = 0;
  13          static unsigned char i = 0;
  14          unsigned char code LcdBuff[] = {
  15            '0','1','2','3','4','5','6','7','8','9',
  16          };
  17          unsigned char showbuf[3] = {
  18            '0','0','\0'
  19          };
  20          int tempbuf[10] = {
  21            0,0,0,0,0,0,0,0,0,0
  22          };
  23          unsigned char zhengshu[10];
  24          unsigned char xiaoshu[10];
  25          
  26          void timeworking();
  27          void ConfigTimer0(unsigned int ms);
  28          void tempworking();
  29          void RefreshLED();
  30          void StopLED();
  31          void DS18B20_Read();
  32          
  33          void main()
  34          {
  35   1        EA = 1;
  36   1        ConfigTimer0(1);  //配置T0定时1ms
  37   1        InitDS1302();
  38   1        InitLcd1602();
  39   1        
  40   1        while(1)
  41   1        {
  42   2          KeyDriver();
  43   2          timeworking();
  44   2          tempworking();
  45   2          RefreshLED();
  46   2          StopLED();
  47   2        }
  48   1      }
  49          
  50          void timeworking()
  51          {
  52   1        unsigned char psec = 0xAA;
  53   1        if (flag200ms && (setIndex == 0))
  54   1        {                             //每隔200ms且未处于设置状态时，
C51 COMPILER V9.60.0.0   MAIN                                                              05/05/2022 14:22:22 PAGE 2   

  55   2          flag200ms = 0;
  56   2          GetRealTime(&bufTime);    //获取当前时间
  57   2          if (psec != bufTime.sec)  //检测到时间有变化时刷新显示
  58   2          {
  59   3            if((mode != 2)&&(mode != 3))
  60   3            {
  61   4              RefreshTimeShow();
  62   4            }
  63   3            psec = bufTime.sec;   //用当前值更新上次秒数
  64   3          }
  65   2        }
  66   1      }
  67          
  68          void tempworking()
  69          {
  70   1        if((mode == 1)&&flag1s)
  71   1        {
  72   2          Temp_index++;
  73   2          DS18B20_Read();
  74   2          if(Temp_index >= 10)
  75   2            {
  76   3              mode = 2;
  77   3              Temp_index = 0;
  78   3            }
  79   2        } 
  80   1      }
  81          
  82          void RefreshLED()
  83          {
  84   1        if((mode == 2)&&flag1s)
  85   1        {
  86   2          LcdClearScreen();
  87   2          RefreshTemp();
  88   2          LEDworking();
  89   2        }
  90   1        flag1s = 0;
  91   1      }
  92          
  93          void StopLED()
  94          {
  95   1        if(mode == 3)
  96   1        {
  97   2          LEDnoworking();
  98   2        }
  99   1      }
 100          
 101          void DS18B20_Read()
 102          {
 103   1        unsigned char buf[2] = {
 104   1          '0','\0'  
 105   1        };
 106   1        
 107   1        if(flag18b20 == 1)
 108   1        {
 109   2          EA = 0;
 110   2          Start18B20();
 111   2          Get18B20Temp(tempbuf+i);
 112   2          EA = 1;
 113   2          buf[0] = LcdBuff[i];
 114   2          i++;
 115   2        }
 116   1      }
C51 COMPILER V9.60.0.0   MAIN                                                              05/05/2022 14:22:22 PAGE 3   

 117          
 118          void DS18B20_Math()
 119          {
 120   1        unsigned char i = 0;  
 121   1      
 122   1        for(i=0;i<=9;i++)
 123   1        {
 124   2          xiaoshu[i] = ((tempbuf[i] & 0xF)*100)/16;
 125   2          zhengshu[i] = tempbuf[i] >> 4;
 126   2        }
 127   1      }
 128          
 129          void DS18B20_Show(unsigned char i)
 130          {   
 131   1        unsigned char pdata wendubuf[8] = {
 132   1          '0',' ','0','0','.','0','0','\0'
 133   1        };
 134   1        
 135   1        DS18B20_Math();
 136   1        
 137   1        wendubuf[0] =  LcdBuff[flagtemp];
 138   1        wendubuf[2] =  LcdBuff[(zhengshu[i]%100)/10];
 139   1        wendubuf[3] =  LcdBuff[zhengshu[i]%10];
 140   1        wendubuf[5] =  LcdBuff[(xiaoshu[i]%100)/10];
 141   1        wendubuf[6] =  LcdBuff[xiaoshu[i]%10];
 142   1        
 143   1        LcdWriteCmd(0x01);
 144   1        
 145   1        LcdShowStr(0,0,"0");
 146   1        LcdShowStr(1,0,wendubuf);
 147   1      }
 148          
 149          /* 按键动作函数，根据键码执行相应的操作，keycode-按键键码 */
 150          void KeyAction(unsigned char keycode)
 151          {
 152   1        if(mode == 0)
 153   1        {
 154   2          if  ((keycode>='0') && (keycode<='9'))  //本例中不响应字符键
 155   2          {
 156   3          }
 157   2          else if (keycode == 0x26)  //向上键，递增当前设置位的值
 158   2          {
 159   3              IncSetTime();
 160   3          }
 161   2          else if (keycode == 0x28)  //向下键，递减当前设置位的值
 162   2          {
 163   3              DecSetTime();
 164   3          }
 165   2          else if (keycode == 0x25)  //向左键，向左切换设置位
 166   2          {
 167   3              LeftShiftTimeSet();
 168   3          }
 169   2          else if (keycode == 0x27)  //向右键，向右切换设置位
 170   2          {
 171   3              RightShiftTimeSet();
 172   3          }
 173   2          else if (keycode == 0x0D)  //回车键，进入设置模式/启用当前设置值
 174   2          {  
 175   3            if (setIndex == 0)  //不处于设置状态时，进入设置状态
 176   3              {
 177   4                  EnterTimeSet();
 178   4              }
C51 COMPILER V9.60.0.0   MAIN                                                              05/05/2022 14:22:22 PAGE 4   

 179   3              else                //已处于设置状态时，保存时间并退出设置状态
 180   3              {
 181   4                  ExitTimeSet(1);
 182   4              }
 183   3          }
 184   2          else if (keycode == 0x1B)  //Esc键，取消当前设置
 185   2          {
 186   3            ExitTimeSet(1);
 187   3            mode = 1;
 188   3          }
 189   2        }
 190   1        if(mode == 2)
 191   1        {
 192   2          if(keycode == '1')
 193   2          {
 194   3            mode = 3;
 195   3            DS18B20_Show(flagtemp);
 196   3            if(flagtemp > 9)
 197   3            {
 198   4              flagtemp = 0;
 199   4            }
 200   3          }
 201   2        }
 202   1        if(mode == 3)
 203   1        {
 204   2          if(keycode == '1')
 205   2          {
 206   3            DS18B20_Show(flagtemp);
 207   3            flagtemp++;
 208   3            if(flagtemp >= 10)
 209   3            {
 210   4              flagtemp = 0;
 211   4            }
 212   3          }
 213   2          else if(keycode == '2')
 214   2          {
 215   3            i = 0;
 216   3            mode = 1;
 217   3            flagtemp = 0;
 218   3            LcdWriteCmd(0x01);
 219   3          }
 220   2        }
 221   1      }
 222          
 223          void ConfigTimer0(unsigned int ms)
 224          {
 225   1          unsigned long tmp;  //临时变量
 226   1          
 227   1          tmp = 11059200 / 12;      //定时器计数频率
 228   1          tmp = (tmp * ms) / 1000;  //计算所需的计数值
 229   1          tmp = 65536 - tmp;        //计算定时器重载值
 230   1          tmp = tmp + 12;           //补偿中断响应延时造成的误差
 231   1          T0RH = (unsigned char)(tmp>>8);  //定时器重载值拆分为高低字节
 232   1          T0RL = (unsigned char)tmp;
 233   1          TMOD &= 0xF0;   //清零T0的控制位
 234   1          TMOD |= 0x01;   //配置T0为模式1
 235   1          TH0 = T0RH;     //加载T0重载值
 236   1          TL0 = T0RL;
 237   1          ET0 = 1;        //使能T0中断
 238   1          TR0 = 1;        //启动T0
 239   1      }
 240          
C51 COMPILER V9.60.0.0   MAIN                                                              05/05/2022 14:22:22 PAGE 5   

 241          void InterruptTimer0() interrupt 1
 242          {
 243   1          static unsigned char tmr200ms = 0;
 244   1          static unsigned int tmr1000ms = 0;
 245   1          
 246   1          TH0 = T0RH;  //重新加载重载值
 247   1          TL0 = T0RL;
 248   1          KeyScan();   //按键扫描
 249   1          tmr200ms++;
 250   1          if (tmr200ms >= 200)  //定时200ms
 251   1          {
 252   2              tmr200ms = 0;
 253   2              flag200ms = 1;
 254   2          }
 255   1          tmr1000ms++;
 256   1          if(tmr1000ms >= 1000)
 257   1          {
 258   2            tmr1000ms = 0;
 259   2            flag1s = 1;
 260   2            flag18b20 = 1;
 261   2          }
 262   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    916    ----
   CONSTANT SIZE    =     22    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =     52      17
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      4    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
