C51 COMPILER V9.60.0.0   IIC                                                               04/26/2022 10:05:56 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE IIC
OBJECT MODULE PLACED IN .\Objects\iic.obj
COMPILER INVOKED BY: D:\keil\C51\BIN\C51.EXE ..\Driver\iic.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Driver;..\Include;..\Use
                    -r) DEBUG OBJECTEXTEND PRINT(.\Listings\iic.lst) TABS(2) OBJECT(.\Objects\iic.obj)

line level    source

   1          #include "config.h"
   2          
   3          #define I2CDelay()  {_nop_();_nop_();_nop_();_nop_();}
   4          
   5          void I2CStart()
   6          {
   7   1          I2C_SDA = 1; //首先确保SDA、SCL都是高电平
   8   1          I2C_SCL = 1;
   9   1          I2CDelay();
  10   1          I2C_SDA = 0; //先拉低SDA
  11   1          I2CDelay();
  12   1          I2C_SCL = 0; //再拉低SCL
  13   1      }
  14          /* 产生总线停止信号 */
  15          void I2CStop()
  16          {
  17   1          I2C_SCL = 0; //首先确保SDA、SCL都是低电平
  18   1          I2C_SDA = 0;
  19   1          I2CDelay();
  20   1          I2C_SCL = 1; //先拉高SCL
  21   1          I2CDelay();
  22   1          I2C_SDA = 1; //再拉高SDA
  23   1          I2CDelay();
  24   1      }
  25          /* I2C总线写操作，dat-待写入字节，返回值-从机应答位的值 */
  26          bit I2CWrite(unsigned char dat)
  27          {
  28   1          bit ack;  //用于暂存应答位的值
  29   1          unsigned char mask;  //用于探测字节内某一位值的掩码变量
  30   1      
  31   1          for (mask=0x80; mask!=0; mask>>=1) //从高位到低位依次进行
  32   1          {
  33   2              if ((mask&dat) == 0)  //该位的值输出到SDA上
  34   2                  I2C_SDA = 0;
  35   2              else
  36   2                  I2C_SDA = 1;
  37   2              I2CDelay();
  38   2              I2C_SCL = 1;          //拉高SCL
  39   2              I2CDelay();
  40   2              I2C_SCL = 0;          //再拉低SCL，完成一个位周期
  41   2          }
  42   1          I2C_SDA = 1;   //8位数据发送完后，主机释放SDA，以检测从机应答
  43   1          I2CDelay();
  44   1          I2C_SCL = 1;   //拉高SCL
  45   1          ack = I2C_SDA; //读取此时的SDA值，即为从机的应答值
  46   1          I2CDelay();
  47   1          I2C_SCL = 0;   //再拉低SCL完成应答位，并保持住总线
  48   1      
  49   1          return (~ack); //应答值取反以符合通常的逻辑：
  50   1                         //0=不存在或忙或写入失败，1=存在且空闲或写入成功
  51   1      }
  52          /* I2C总线读操作，并发送非应答信号，返回值-读到的字节 */
  53          unsigned char I2CReadNAK()
  54          {
C51 COMPILER V9.60.0.0   IIC                                                               04/26/2022 10:05:56 PAGE 2   

  55   1          unsigned char mask;
  56   1          unsigned char dat;
  57   1      
  58   1          I2C_SDA = 1;  //首先确保主机释放SDA
  59   1          for (mask=0x80; mask!=0; mask>>=1) //从高位到低位依次进行
  60   1          {
  61   2              I2CDelay();
  62   2              I2C_SCL = 1;      //拉高SCL
  63   2              if(I2C_SDA == 0)  //读取SDA的值
  64   2                  dat &= ~mask; //为0时，dat中对应位清零
  65   2              else
  66   2                  dat |= mask;  //为1时，dat中对应位置1
  67   2              I2CDelay();
  68   2              I2C_SCL = 0;      //再拉低SCL，以使从机发送出下一位
  69   2          }
  70   1          I2C_SDA = 1;   //8位数据发送完后，拉高SDA，发送非应答信号
  71   1          I2CDelay();
  72   1          I2C_SCL = 1;   //拉高SCL
  73   1          I2CDelay();
  74   1          I2C_SCL = 0;   //再拉低SCL完成非应答位，并保持住总线
  75   1      
  76   1          return dat;
  77   1      }
  78          /* I2C总线读操作，并发送应答信号，返回值-读到的字节 */
  79          unsigned char I2CReadACK()
  80          {
  81   1          unsigned char mask;
  82   1          unsigned char dat;
  83   1      
  84   1          I2C_SDA = 1;  //首先确保主机释放SDA
  85   1          for (mask=0x80; mask!=0; mask>>=1) //从高位到低位依次进行
  86   1          {
  87   2              I2CDelay();
  88   2              I2C_SCL = 1;      //拉高SCL
  89   2              if(I2C_SDA == 0)  //读取SDA的值
  90   2                  dat &= ~mask; //为0时，dat中对应位清零
  91   2              else
  92   2                  dat |= mask;  //为1时，dat中对应位置1
  93   2              I2CDelay();
  94   2              I2C_SCL = 0;      //再拉低SCL，以使从机发送出下一位
  95   2          }
  96   1          I2C_SDA = 0;   //8位数据发送完后，拉低SDA，发送应答信号
  97   1          I2CDelay();
  98   1          I2C_SCL = 1;   //拉高SCL
  99   1          I2CDelay();
 100   1          I2C_SCL = 0;   //再拉低SCL完成应答位，并保持住总线
 101   1      
 102   1          return dat;
 103   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    194    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
